{
  "name": "Humid",
  "author": "https://github.com/frou",
  "variables": {
    "black": "#000000",
    "blue": "#5a70a9",
    "gold": "#ad9361",
    "green": "#6a8856",
    "grey": "#3f3938",
    "grey_light": "#4f4d4d",
    "orange": "#ae7337",
    "orange_punchy": "#ff8000",
    "purple": "#995a64",
    "red": "#b75b4e",
    "red_punchy": "#bb0000",
    "slate": "#211e1e",
    "slate_light": "#60605a",
    "steel": "#8c8c99",
    "white": "#ffffff",
    "white_faded": "#dadada",
    "yellow_punchy": "#eed600"
  },
  "globals": {
    "foreground": "var(white_faded)",
    "background": "var(slate)",
    "caret": "var(white)",
    "invisibles": "var(grey_light)",
    "line_highlight": "var(grey)",
    "selection": "var(grey)",
    "gutter": "var(slate)",
    "gutter_foreground": "var(slate_light)",
    "active_guide": "var(gold)",
    "find_highlight_foreground": "var(black)",
    "find_highlight": "var(yellow_punchy)",
    "brackets_options": "underline",
    "brackets_foreground": "var(orange_punchy)",
    "bracket_contents_options": "underline",
    "bracket_contents_foreground": "var(orange_punchy)",
    "tags_options": "underline",
    "tags_foreground": "var(orange_punchy)"
  },
  "rules": [
    {
      "name": "Comment",
      "scope": "comment - (source.clojure comment.punctuation)",
      "foreground": "var(slate_light)"
    },
    {
      "name": "Comment [reclassification]",
      "scope": "text.find-in-files constant.numeric.line-number.match",
      "foreground": "var(slate_light)"
    },
    {
      "name": "Constant",
      "scope": "constant - (source.java constant.other)",
      "foreground": "var(red)"
    },
    {
      "name": "Entity",
      "scope": "entity - (source.c++ entity.name.function punctuation.accessor)",
      "foreground": "var(orange)"
    },
    {
      "name": "Invalid",
      "scope": "invalid",
      "background": "var(red_punchy)"
    },
    {
      "name": "Keyword",
      "scope": "keyword - keyword.operator | keyword.operator.word | source.python keyword.operator.logical | source.ts & (keyword.operator.expression | keyword.operator.new)",
      "foreground": "var(green)"
    },
    {
      "name": "Keyword [reclassification]",
      "scope": "source.clojure & (storage.modifier | storage.type) | source.go storage.type.keyword | source.java & ((storage.modifier - storage.modifier.array) | storage.type.var | meta.class.identifier storage.type) | source.js & (variable.language.super | variable.language.this) | source.ts & (meta.var.expr storage.type | storage.modifier | storage.type.class | storage.type.enum | storage.type.function | storage.type.interface | variable.language.super | variable.language.this)",
      "foreground": "var(green)"
    },
    {
      "name": "Markup",
      "scope": "markup",
      "foreground": "var(steel)"
    },
    {
      "name": "Markup [reclassification]",
      "scope": "text.find-in-files entity.name.filename | string constant.other.placeholder | source.clojure constant.other.keyword | source.erlang & (constant.other.symbol | constant.language.exception.type) | source.java meta.annotation | source.js meta.template.expression | source.ts meta.embedded string.template  | meta.scope-selector.sublime & (keyword.operator | punctuation.section.group)",
      "foreground": "var(steel)"
    },
    {
      "name": "Storage",
      "scope": "storage - (source.ts storage.type.function.arrow)",
      "foreground": "var(gold)"
    },
    {
      "name": "Storage [reclassification]",
      "scope": "source.java & (support.class.import | (support.class & (meta.instantiation | meta.method.parameters | meta.catch.parameters))) | source.swift support.class | source.ts & (support.type | entity.name.type - (entity.name.type.class | entity.name.type.enum | entity.name.type.interface))",
      "foreground": "var(gold)"
    },
    {
      "name": "String",
      "scope": "string",
      "foreground": "var(blue)"
    },
    {
      "name": "Support",
      "scope": "support - (source.erlang support.namespace | source.go support.type.builtin | source.java & (support.class | support.type.package) | source.js & (support.class | support.constant | support.module | support.type) | source.python entity.name.function | source.swift entity.name.type | source.ts & (support.class | support.constant | support.variable.property))",
      "foreground": "var(purple)"
    },
    {
      "name": "Support [reclassification]",
      "scope": "variable.function | source.go meta.type entity.other.inherited-class | source.json meta.mapping.key string.quoted | source.ts meta.function-call entity.name.function",
      "foreground": "var(purple)"
    },
    {
      "name": "Diff insertion",
      "scope": "markup.inserted",
      "foreground": "var(green)"
    },
    {
      "name": "Diff deletion",
      "scope": "markup.deleted",
      "foreground": "var(red)"
    },
    {
      "name": "Diff metadata",
      "scope": "meta.diff",
      "foreground": "var(slate_light)"
    },
    {
      "name": "Diff filename",
      "scope": "meta.diff.header.to-file",
      "foreground": "var(orange)"
    },
    {
      "name": "Build Results Error Prefix",
      "scope": "message.error",
      "foreground": "var(red)"
    },
    {
      "name": "Build Results Warning Prefix",
      "scope": "message.warning",
      "foreground": "var(gold)"
    },
    {
      "name": "Build Results Note Prefix",
      "scope": "message.note",
      "foreground": "var(blue)"
    }
  ]
}
