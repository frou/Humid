#!/usr/bin/env python3

# This script generates a version of the colour scheme intended for use in REPLs running
# inside Sublime Text (e.g. Tutkain's)

import json
from pathlib import Path

import json5  # REF: https://github.com/spyoungtech/json-five

SCHEME_PATH = Path("Humid.sublime-color-scheme")
SMDIFF_SCHEME_PATH = Path("Humid for REPL.sublime-color-scheme")

with open(SCHEME_PATH) as infile:
    scheme = json5.load(infile)

scheme["name"] = f"{SMDIFF_SCHEME_PATH.stem} (GENERATED FILE - DO NOT EDIT DIRECTLY)"
scheme["variables"].update(
    {"blue_slate": "color(var(slate) blend(var(blue) 85%) lightness(- 5%))"}
)

scheme["globals"]["background"] = "var(blue_slate)"
scheme["globals"]["gutter"] = "var(blue_slate)"

RED = "var(red)"
REDISH = "var(--redish)"

# In the REPL, we are reserving the colour red for error messages, so remove any
# existing rules that use it (e.g. constants like numeric literals).
scheme["rules"] = [
    rule
    for rule in scheme["rules"]
    if rule.get("foreground", None) not in [RED, REDISH]
]

scheme["rules"].extend(
    [
        {
            "scope": "tutkain.repl.stderr",
            # NOTE: Tutkain already colours the corresponding chevron icon in the gutter
            # using `redish`, so use the exact same variable to guarantee they match.
            "foreground": REDISH,
        },
    ]
)


with open(SMDIFF_SCHEME_PATH, "w") as outfile:
    json.dump(scheme, outfile, indent=2)
